.版本 2
.支持库 EThread
.支持库 spec
.支持库 commobj
.支持库 sock
.支持库 shellEx

.程序集 窗口程序集_启动窗口
.程序集变量 map, 对象
.程序集变量 toolcookies, 文本型
.程序集变量 传递_本地端口, 整数型
.程序集变量 传递_创建端口, 整数型
.程序集变量 传递_描述, 文本型
.程序集变量 测试句柄, 整数型
.程序集变量 热键, 整数型

.子程序 __启动窗口_创建完毕

当前版本 ＝ 1
_启动窗口.标题 ＝ “GTASuperESCv” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu 687931091Grand Theft Auto V私人会所群内测版”
启动线程 (&更新检测, , )
注册热键a ()

.子程序 检测创建支持
.局部变量 创建端口, 整数型
.局部变量 已次数, 整数型
.局部变量 检测结果, 整数型

编辑框1.加入文本 (#换行符 ＋ “检测能否自动创建房间(公网IP+UPnP+设为专用网络)：”)
编辑框1.加入文本 (#换行符 ＋ “内网IP：”)
内网IP ＝ 取内网IP ()
编辑框1.加入文本 (内网IP)
编辑框1.加入文本 (#换行符 ＋ “外网IP：”)
外网IP ＝ 取外网IP ()
编辑框1.加入文本 (外网IP)
.如果真 (外网IP ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ “无法获取外网IP，无法自动创建房间，请确认您是否已联网”)
.如果真结束
是否检测中 ＝ 真
.计次循环首 (5, 已次数)
    置随机数种子 ()
    .如果 (已次数 ＝ 5)
        创建端口 ＝ 26576
    .否则
        创建端口 ＝ 取随机数 (10001, 32767)
    .如果结束
    编辑框1.加入文本 (#换行符 ＋ “创建” ＋ 外网IP ＋ “:” ＋ 到文本 (创建端口) ＋ “的UPnP映射”)
    传递_描述 ＝ “GTASuperESC_” ＋ 到文本 (取随机数 (1000, 9999))
    传递_创建端口 ＝ 创建端口
    传递_本地端口 ＝ 26576
    创建upnp时钟.时钟周期 ＝ 1
    延迟 (300)
    编辑框1.加入文本 (#换行符 ＋ “测试是否可用：”)
    检测结果 ＝ 检查端口开放 (外网IP, 创建端口)
    .如果真 (检测结果 ＝ 1)
        编辑框1.加入文本 (“可用”)
        按钮1.禁止 ＝ 假
        使用端口 ＝ 创建端口
        跳出循环 ()
    .如果真结束
    .如果真 (检测结果 ＝ 0)
        编辑框1.加入文本 (“不可用”)
        注销upnp ()
    .如果真结束
    .如果真 (检测结果 ＝ 100)
        编辑框1.加入文本 (“检测失败”)
        注销upnp ()
    .如果真结束

.计次循环尾 ()
是否检测中 ＝ 假

.子程序 创建upnp
.参数 协议, 文本型, , TCP或UDP
.参数 本地端口, 整数型
.参数 映射端口, 整数型
.参数 描述, 文本型, 可空
.局部变量 upnpnat, 对象

upnpnat.创建 (“{AE1E00AA-3FD5-403C-8A27-2BBDC30CD0E1}”, )
map ＝ upnpnat.读对象型属性 (“StaticPortMappingCollection”, ).对象型方法 (“Add”, 映射端口, 协议, 本地端口, 取内网IP (), 真, 描述)


.子程序 注销upnp

map.方法 (“Enable”, 假)
map.清除 ()


.子程序 检查端口开放, 整数型, , 0=失败1=成功100=查询失败
.参数 IPa, 文本型
.参数 端口, 整数型
.局部变量 访问结果, 文本型
.局部变量 访问失败计数, 整数型

访问结果 ＝ 到文本 (网页_访问_对象 (“http://api.ip33.com/port_scan/scan?ip=” ＋ IPa ＋ “&port=” ＋ 到文本 (端口) ＋ “&time=2000”, 0, , , , , , , , , , 5))
访问结果 ＝ 文本_替换 (访问结果, , , , #引号, “'”, #换行符, “”)
调试输出 (访问结果)
.如果真 (快速取出现次数 (访问结果, “sstate': true,”) ≠ 0)
    调试输出 (“ip33.com检测开放”)
    返回 (1)
.如果真结束
.如果真 (快速取出现次数 (访问结果, “state': false”) ＝ 0)
    访问失败计数 ＝ 访问失败计数 ＋ 1
.如果真结束

.如果真 (toolcookies ＝ “”)
    网页_访问_对象 (“https://tool.lu/portscan/”, , , , toolcookies, , , , , , , 5)
.如果真结束
访问结果 ＝ 到文本 (网页_访问_对象 (“https://tool.lu/portscan/ajax.html”, 1, “addr=” ＋ IPa ＋ “&ports=” ＋ 到文本 (端口), toolcookies, , , , , , , , 5))
访问结果 ＝ 文本_替换 (访问结果, , , , #引号, “'”)
调试输出 (访问结果)
.如果真 (快速取出现次数 (访问结果, “status':'open','port':” ＋ 到文本 (端口)) ≠ 0)
    调试输出 (“tool.lu检测开放”)
    返回 (1)
.如果真结束
.如果真 (快速取出现次数 (访问结果, “status':true,'items':[]”) ＝ 0)
    访问失败计数 ＝ 访问失败计数 ＋ 1
.如果真结束
.如果真 (访问失败计数 ＝ 2)
    调试输出 (“检测失败”)
    返回 (100)
.如果真结束
调试输出 (“未开放”)
返回 (0)

.子程序 快速取出现次数, 整数型
.参数 全部文本, 文本型
.参数 要找的文本, 文本型
.局部变量 全部内容, 快速文本对象

全部内容.置文本 (全部文本)
返回 (全部内容.替换子文本 (要找的文本, “”, , , 真))

.子程序 取外网IP, 文本型
.局部变量 访问结果, 文本型
.局部变量 返回状态, 整数型

访问结果 ＝ 到文本 (网页_访问_对象 (“http://wgzeyu.gtxcn.com/getip.php”, 0, , , , , , 返回状态, , , , 3))
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 取文本长度 (访问结果) ≥ 7 且 取文本长度 (访问结果) ≤ 15)
    调试输出 (“WGzeyu服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
访问结果 ＝ 到文本 (网页_访问_对象 (“http://ip.chinaz.com/getip.aspx”, 0, , , , , , 返回状态, , , , 2))
访问结果 ＝ 文本_取出中间文本 (访问结果, “ip:'”, “',”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 取文本长度 (访问结果) ≥ 7 且 取文本长度 (访问结果) ≤ 15)
    调试输出 (“chinaz服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
访问结果 ＝ 编码_Utf8到Ansi (网页_访问_对象 (“https://ip.cn”, 0, , , , , , 返回状态, , , , 3))
访问结果 ＝ 文本_取出中间文本 (访问结果, “<p>您现在的 IP：<code>”, “</code></p><p>”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 取文本长度 (访问结果) ≥ 7 且 取文本长度 (访问结果) ≤ 15)
    调试输出 (“IP.CN服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
访问结果 ＝ 到文本 (网页_访问_对象 (“http://ip.qq.com”, 0, , , , , , 返回状态, , , , 5))
访问结果 ＝ 文本_替换 (访问结果, , , , #引号, “'”)
访问结果 ＝ 文本_取出中间文本 (访问结果, “您当前的IP为：<span class='red'>”, “</span></p>”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 取文本长度 (访问结果) ≥ 7 且 取文本长度 (访问结果) ≤ 15)
    调试输出 (“腾讯服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
返回 (“”)

.子程序 取内网IP, 文本型
.局部变量 全IP, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 IP1, 文本型

IP1 ＝ 转换为IP地址 (“”)
.如果真 (取文本左边 (IP1, 8) ＝ “192.168.” 或 取文本左边 (IP1, 3) ＝ “10.”)
    返回 (IP1)
.如果真结束
全IP ＝ 取本机IP ()
.计次循环首 (取数组成员数 (全IP), 已次数)
    .如果真 (取文本左边 (全IP [已次数], 8) ＝ “192.168.” 或 取文本左边 (全IP [已次数], 3) ＝ “10.”)
        返回 (全IP [已次数])
    .如果真结束

.计次循环尾 ()
.如果真 (IP1 ≠ “”)
    返回 (IP1)
.如果真结束
.如果真 (取数组成员数 (全IP) ＞ 0)
    返回 (全IP [1])
.如果真结束
返回 (“”)

.子程序 __启动窗口_首次激活

' 检测创建支持 ()

.子程序 _创建upnp时钟_周期事件

创建upnp时钟.时钟周期 ＝ 0
创建upnp (“TCP”, 传递_本地端口, 传递_创建端口, 传递_描述)


.子程序 干掉GTA

进程_结束1 (“GTA5.exe”)

.子程序 _按钮1_被单击
.局部变量 房间号, 文本型
.局部变量 密码长度, 整数型
.局部变量 内网房间号, 文本型

' 创建服务器
加密秘钥 ＝ “”
密码长度 ＝ 4
.如果真 (选择框1.选中 ＝ 真)
    密码长度 ＝ 256
.如果真结束
.计次循环首 (密码长度, )
    加密秘钥 ＝ 加密秘钥 ＋ 文本_取随机字母 (2)
.计次循环尾 ()
调试输出 (“使用端口”, 使用端口)
房间号 ＝ 外网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
内网房间号 ＝ 内网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
房间号 ＝ “#” ＋ 编码_BASE64编码 (文本_加密c (房间号, “O42xiMVordM72pvE”))
置剪辑板文本 (房间号)
编辑框1.加入文本 (#换行符 ＋ “已成功创建房间，内网房间号：” ＋ 内网房间号 ＋ #换行符 ＋ “外网房间号：” ＋ 房间号 ＋ #换行符 ＋ “已复制到剪辑板，请注意不要公开发布房间号，以防玩着正爽被别人关游戏”)
编辑框2.内容 ＝ 房间号
心跳包.时钟周期 ＝ 3000
编辑框4.禁止 ＝ 假
编辑框2.输入方式 ＝ 1
按钮5.禁止 ＝ 假
按钮1.禁止 ＝ 真
按钮2.禁止 ＝ 真
按钮4.禁止 ＝ 真
编辑框3.禁止 ＝ 真
选择框1.禁止 ＝ 真
调试输出 (房间号)

.子程序 __启动窗口_将被销毁

注销upnp ()

.子程序 _按钮4_被单击
.局部变量 外网房间号, 文本型
.局部变量 内网房间号, 文本型
.局部变量 密码长度, 整数型

.如果真 (到整数 (编辑框3.内容) ＝ 0)
    返回 ()
.如果真结束
使用端口 ＝ 到整数 (编辑框3.内容)
服务器1.端口 ＝ 使用端口
加密秘钥 ＝ “”
密码长度 ＝ 4
.如果真 (选择框1.选中 ＝ 真)
    密码长度 ＝ 256
.如果真结束
.计次循环首 (密码长度, )
    加密秘钥 ＝ 加密秘钥 ＋ 文本_取随机字母 (2)
.计次循环尾 ()
外网房间号 ＝ 外网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
内网房间号 ＝ 内网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
编辑框2.内容 ＝ 外网房间号
置剪辑板文本 (外网房间号)
编辑框1.加入文本 (#换行符 ＋ “已成功创建房间，内网房间号：” ＋ 内网房间号 ＋ #换行符 ＋ “外网房间号：” ＋ 外网房间号 ＋ “创建房间前请确认网络类型已设为专用而不是公用(防火墙允许开放端口)，手动创建外网房间需有外网IP并手动设置端口映射”)
心跳包.时钟周期 ＝ 3000
编辑框4.禁止 ＝ 假
按钮5.禁止 ＝ 假
编辑框2.输入方式 ＝ 1
按钮1.禁止 ＝ 真
按钮2.禁止 ＝ 真
按钮4.禁止 ＝ 真
编辑框3.禁止 ＝ 真
选择框1.禁止 ＝ 真


.子程序 收到数据
.参数 数据, 字节集
.局部变量 内容, 文本型

内容 ＝ 解包数据 (数据, 加密秘钥)
.如果真 (内容 ≠ “”)
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 (真))
.如果真结束
.如果真 (内容 ＝ “KILLGTA”)
    干掉GTA ()
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，已干掉GTA”)
    返回 ()
.如果真结束
.如果真 (内容 ＝ “OK”)
    返回 ()
.如果真结束
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “信息:” ＋ 内容)



.子程序 解包数据, 文本型
.参数 内容a, 字节集
.参数 秘钥, 文本型
.局部变量 内容, 文本型
.局部变量 MD5b, 文本型
.局部变量 MD5c, 文本型
.局部变量 验证, 文本型
.局部变量 已次数, 整数型

内容 ＝ 文本_解密c (内容a, 秘钥)
.如果真 (内容 ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，解密失败已丢弃。”)
    返回 (“”)
.如果真结束
MD5b ＝ 文本_取出中间文本 (内容, “<md5>”, “</md5>”)
内容 ＝ “<body>” ＋ 文本_取出中间文本 (内容, “<body>”, “</body>”) ＋ “</body>”
验证 ＝ 文本_取出中间文本 (内容, “<hash>”, “</hash>”)
MD5c ＝ 校验_取md5 (到字节集 (内容), 真)
.如果真 (MD5b ≠ MD5c)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，校验失败已丢弃。”)
    返回 (“”)
.如果真结束
.计次循环首 (取数组成员数 (已收到过的数据), 已次数)
    .如果真 (已收到过的数据 [已次数] ＝ 验证)
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到重复数据，为防重放已丢弃。”)
        返回 (“”)
    .如果真结束

.计次循环尾 ()
加入成员 (已收到过的数据, 验证)
返回 (文本_替换 (文本_取出中间文本 (内容, “<body>”, “</body>”), , , , “<hash>” ＋ 验证 ＋ “</hash>”, “”))

.子程序 _服务器1_数据到达
.局部变量 收到的数据, 字节集

收到的数据 ＝ 服务器1.取回数据 ()
收到数据 (收到的数据)
发送数据 (收到的数据)

.子程序 封装数据, 字节集
.参数 内容, 文本型
.参数 秘钥, 文本型
.局部变量 MD5a, 文本型

置随机数种子 ()
内容 ＝ “<body><hash>” ＋ 时间_取现行时间戳 () ＋ “!” ＋ 到文本 (取随机数 (1000, 65535)) ＋ “</hash>” ＋ 内容 ＋ “</body>”
MD5a ＝ 校验_取md5 (到字节集 (内容), 真)
内容 ＝ 内容 ＋ “<md5>” ＋ MD5a ＋ “</md5>”
返回 (文本_加密c (内容, 秘钥))


.子程序 发送数据
.参数 发送的数据, 字节集
.局部变量 已次数, 整数型
.局部变量 循环次数, 整数型

.如果 (是否关闭服务器 ＝ 假)
    循环次数 ＝ 取数组成员数 (全客户)
    .计次循环首 (循环次数, 已次数)
        服务器1.发送数据 (全客户 [已次数], 发送的数据, 2)
    .计次循环尾 ()
.否则
    客户1.发送数据 (发送的数据)
.如果结束


.子程序 _服务器1_客户进入

.如果 (是否关闭服务器)
    服务器1.断开客户 (服务器1.取回客户 ())
.否则
    加入成员 (全客户, 服务器1.取回客户 ())
    .如果真 (是否检测中 ＝ 假)
        发送数据 (封装数据 (“有人加入房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”, 加密秘钥))
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “信息:有人加入房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”)
    .如果真结束

.如果结束


.子程序 _服务器1_客户离开
.局部变量 已次数, 整数型
.局部变量 删除的客户, 文本型

删除的客户 ＝ 服务器1.取回客户 ()
.计次循环首 (取数组成员数 (全客户), 已次数)
    .如果真 (全客户 [已次数] ＝ 删除的客户)
        删除成员 (全客户, 已次数, 1)
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (是否检测中 ＝ 假)
    发送数据 (封装数据 (“有人离开房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”, 加密秘钥))
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “信息:有人离开房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”)
.如果真结束


.子程序 _心跳包_周期事件

发送数据 (封装数据 (“OK”, 加密秘钥))

.子程序 _心跳包检测_周期事件

.如果真 (到长整数 (时间_取现行时间戳 (真)) － 上次接收时间 ＞ 10000)
    编辑框1.加入文本 (#换行符 ＋ “超过10秒未收到心跳包，重新连接服务器”)
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 (真))
    重连服务器.时钟周期 ＝ 1
.如果真结束


.子程序 _重连服务器_周期事件

重连服务器.时钟周期 ＝ 0
客户1.断开连接 ()
.如果 (客户1.连接 (服务器IP, 使用端口))
    编辑框1.加入文本 (#换行符 ＋ “成功连接服务器”)
.否则
    编辑框1.加入文本 (#换行符 ＋ “服务器连接失败”)
.如果结束


.子程序 _按钮5_被单击

.如果真 (编辑框4.内容 ≠ “”)
    发送数据 (封装数据 (编辑框4.内容, 加密秘钥))
.如果真结束
.如果真 (是否关闭服务器 ＝ 假)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “信息:” ＋ 编辑框4.内容)
.如果真结束
编辑框4.内容 ＝ “”

.子程序 _编辑框4_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    _按钮5_被单击 ()
    返回 (假)
.如果真结束


.子程序 _客户1_数据到达

收到数据 (客户1.取回数据 ())

.子程序 _客户1_连接断开

编辑框1.加入文本 (#换行符 ＋ “连接断开，重新连接服务器”)
上次接收时间 ＝ 到长整数 (时间_取现行时间戳 (真))
重连服务器.时钟周期 ＝ 1


.子程序 _按钮2_被单击
.局部变量 临时内容, 文本型

.如果真 (编辑框2.内容 ＝ “”)
    返回 ()
.如果真结束
临时内容 ＝ 编辑框2.内容
.如果真 (取文本左边 (编辑框2.内容, 1) ＝ “#”)
    临时内容 ＝ 文本_解密c (编码_BASE64解码 (取文本右边 (编辑框2.内容, 取文本长度 (编辑框2.内容) － 1)), “O42xiMVordM72pvE”)
.如果真结束
服务器IP ＝ 文本_取出中间文本 (“@” ＋ 临时内容, “@”, “:”)
使用端口 ＝ 到整数 (文本_取出中间文本 (临时内容, “:”, “!”))
加密秘钥 ＝ 文本_取出中间文本 (临时内容 ＋ “@”, “!”, “@”)
.如果真 (服务器IP ＝ “” 或 使用端口 ＝ 0 或 加密秘钥 ＝ “”)
    编辑框2.内容 ＝ “”
    返回 ()
.如果真结束
.如果 (客户1.连接 (服务器IP, 使用端口))
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 (真))
    心跳包检测.时钟周期 ＝ 100
    是否关闭服务器 ＝ 真
    编辑框4.禁止 ＝ 假
    编辑框2.输入方式 ＝ 1
    按钮5.禁止 ＝ 假
    按钮1.禁止 ＝ 真
    按钮2.禁止 ＝ 真
    按钮4.禁止 ＝ 真
    编辑框3.禁止 ＝ 真
    选择框1.禁止 ＝ 真
    编辑框1.加入文本 (#换行符 ＋ “成功加入房间”)
    强制结束线程 (测试句柄)
.否则
    编辑框1.加入文本 (#换行符 ＋ “服务器连接失败”)
.如果结束


.子程序 _按钮3_被单击

启动线程 (&检测创建支持, , 测试句柄)
按钮3.可视 ＝ 假

.子程序 _标签3_反馈事件, 整数型
.参数 参数一, 整数型
.参数 参数二, 整数型

.如果真 (参数一 ＝ 热键)
    干掉GTA ()
    发送数据 (封装数据 (“KILLGTA”, 加密秘钥))
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “检测到快捷键，已干掉GTA5”)
    发送数据 (封装数据 (“KILLGTA”, 加密秘钥))
.如果真结束


.子程序 _组合框1_列表项被选择

注册热键a ()

.子程序 _组合框2_列表项被选择

注册热键a ()

.子程序 注册热键a

热键 ＝ 注册热键 (取窗口句柄 (), 标签3.取窗口句柄 (), 组合框1.现行选中项, 组合框2.现行选中项 ＋ 112)
.如果 (组合框1.现行选中项 ＝ 0)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “已将关闭GTA快捷键设为” ＋ 组合框2.取项目文本 (组合框2.现行选中项))
.否则
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “已将关闭GTA快捷键设为” ＋ 组合框1.取项目文本 (组合框1.现行选中项) ＋ “+” ＋ 组合框2.取项目文本 (组合框2.现行选中项))
.如果结束
编辑框1.加入文本 (#换行符 ＋ “建议先对快捷键进行测试，若与其他软件冲突可能会无法使用” ＋ 组合框2.取项目文本 (组合框2.现行选中项))


.子程序 更新检测
.局部变量 访问结果, 文本型
.局部变量 循环次数, 整数型
.局部变量 读取版本, 整数型
.局部变量 更新内容, 文本型
.局部变量 已次数, 整数型
.局部变量 使用服务器, 文本型

.计次循环首 (4, 循环次数)
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.gtxcn.com/GTASuperESC/updatecheck.php”, 1, “ver=” ＋ 到文本 (当前版本), , , , , , , , , 5 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.gtxcn.com[加密,日本VPS+CloudFlare,只取新版内容]”  ' 使用PHP防止被cloudflare缓存,第一时间读取到更新,并且只输出比当前版本新的版本号,加载更快
    .如果真 (访问结果 ≠ “”)  ' 1默认使用带HTTPS的个人服务器读取更新
        跳出循环 ()
    .如果真结束
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.github.io/GTASuperESC/updatecheck.txt”, 0, , , , , , , , , , 6 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.github.io[加密,GitHubIO]”
    .如果真 (访问结果 ≠ “”)  ' 2其次使用带HTTPS的GitHub读取更新
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (访问结果 ＝ “”)
    调试输出 (“检测更新失败”)
    返回 ()
.如果真结束
调试输出 (访问结果)
读取版本 ＝ 到整数 (文本_取出中间文本 (访问结果, “<ver>”, “</ver>”))
调试输出 (“本地版本号：” ＋ 到文本 (当前版本) ＋ “ 在线版本号：” ＋ 到文本 (读取版本) ＋ “ 使用服务器：” ＋ 使用服务器)
.如果真 (读取版本 ＞ 当前版本)
    更新内容 ＝ “GTASuperESCv” ＋ 到文本 (当前版本 ÷ 10) ＋ “→v” ＋ 到文本 (读取版本 ÷ 10) ＋ “更新记录：” ＋ #换行符
    .计次循环首 (读取版本 － 当前版本, 已次数)
        .如果真 (文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ≠ “”)
            更新内容 ＝ 更新内容 ＋ 文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ＋ #换行符
        .如果真结束

    .计次循环尾 ()
    .如果真 (信息框 (文本_取出中间文本 (访问结果, “<txt>”, “</txt>”) ＋ #换行符 ＋ #换行符 ＋ 更新内容 ＋ #换行符 ＋ “是否更新？”, 36, “发现新版本”, ) ＝ 5)
        网页_打开指定网址 (文本_取出中间文本 (访问结果, “<url>”, “</url>”))
    .如果真结束

.如果真结束


.子程序 _按钮6_被单击

干掉GTA ()
发送数据 (封装数据 (“KILLGTA”, 加密秘钥))
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “检测到按键，已干掉GTA5”)
发送数据 (封装数据 (“KILLGTA”, 加密秘钥))

.版本 2

.全局变量 使用端口, 整数型
.全局变量 内网IP, 文本型
.全局变量 外网IP, 文本型
.全局变量 加密秘钥, 文本型
.全局变量 全客户, 文本型, , "0"
.全局变量 已收到过的数据, 文本型, , "0", 配合HASH与MD5防重放攻击
.全局变量 是否关闭服务器, 逻辑型
.全局变量 上次接收时间, 长整数型
.全局变量 服务器IP, 文本型
.全局变量 是否检测中, 逻辑型
.全局变量 当前版本, 整数型
