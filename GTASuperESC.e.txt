.版本 2
.支持库 EThread
.支持库 spec
.支持库 eAPI
.支持库 commobj
.支持库 sock
.支持库 shellEx

.程序集 窗口程序集_启动窗口
.程序集变量 map, 对象
.程序集变量 传递_本地端口, 整数型
.程序集变量 传递_创建端口, 整数型
.程序集变量 传递_描述, 文本型
.程序集变量 测试句柄, 整数型
.程序集变量 热键, 整数型
.程序集变量 保存周期, 整数型
.程序集变量 hook信息框, 整数型

.子程序 __启动窗口_创建完毕

当前版本 ＝ 21
保存周期 ＝ 2000
心跳包周期 ＝ 5000

.子程序 __启动窗口_首次激活
.局部变量 读取内容, 文本型
.局部变量 已次数, 整数型

_启动窗口.标题 ＝ “GTASuperESCv” ＋ 到文本 (当前版本 ÷ 10) ＋ “ @WGzeyu 群号:687931091”
读取设置 ()
启动线程 (&更新检测, , )
注册热键a ()
.如果 (是否管理员 ())
    .如果 (获取网络信息 ())
        .计次循环首 (取数组成员数 (网络详情), 已次数)
            组合框3.加入项目 (网络详情 [已次数].接口名称, )
            调试输出 (网络详情 [已次数].管理员状态, 网络详情 [已次数].状态, 网络详情 [已次数].类型, 网络详情 [已次数].接口名称)
        .计次循环尾 ()
        组合框3.现行选中项 ＝ 0
    .否则
        编辑框1.加入文本 (#换行符 ＋ “错误：获取网络连接失败，请手动打开适配器设置，查看并输入您正在使用的网络连接名称”)
    .如果结束

.否则
    标签6.标题 ＝ “右键以管理员权限运行本软件才能使用禁用网卡功能”
    标签6.宽度 ＝ 280
    选择框3.禁止 ＝ 真
    组合框3.禁止 ＝ 真
.如果结束
.如果真 (是否多开 ())
    信息框 (“警告：多开此软件可能会导致快捷键或端口冲突，从而影响使用，建议关闭全部后只开启一个软件，例如若开启第二个后关闭了实际成功建立快捷键的那个，另一个将无法检测快捷键”, 48, , )
.如果真结束
检测断网选中 ()
.如果真 (文件是否存在 (取运行目录 () ＋ “\” ＋ 取机器码 () ＋ “.ini”) ＝ 假)
    载入 (教程窗口, _启动窗口, 假)
    保存设置 (到整数 (编辑框3.内容), 组合框1.现行选中项, 组合框2.现行选中项, 选择框1.选中, 编辑框6.内容, 选择框2.选中, 选择框3.选中, 编辑框5.内容)
.如果真结束


.子程序 是否多开, 逻辑型
.局部变量 全进程, 进程信息, , "0"
.局部变量 已次数, 整数型

全进程 ＝ 取系统进程列表 ()
.变量循环首 (1, 取数组成员数 (全进程), 1, 已次数)
    .如果真 (到文本 (全进程 [已次数].进程名称) ＝ 取执行文件名 ())
        .如果真 (全进程 [已次数].进程标识符 ≠ GetCurrentProcessId ())
            返回 (真)
        .如果真结束

    .如果真结束

.变量循环尾 ()
返回 (假)

.子程序 保存设置, 逻辑型
.参数 端口号a, 整数型
.参数 功能键a, 整数型
.参数 快捷键a, 整数型
.参数 长密码a, 逻辑型
.参数 进程名a, 文本型
.参数 进程选中a, 逻辑型
.参数 网卡选中a, 逻辑型
.参数 昵称a, 文本型
.局部变量 保存信息, 文本型
.局部变量 信息数组, 文本型, , "0"
.局部变量 模板数组, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 生成信息, 文本型
.局部变量 返回的状态, 逻辑型

保存信息 ＝ 保存信息 ＋ 到文本 (端口号a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (功能键a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (快捷键a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (长密码a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (进程名a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (进程选中a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (网卡选中a) ＋ “</*内容*/>” ＋ #换行符
保存信息 ＝ 保存信息 ＋ 到文本 (昵称a) ＋ “</*内容*/>” ＋ #换行符
信息数组 ＝ 分割文本 (保存信息, #换行符, )
模板数组 ＝ 分割文本 (“端口号,功能键,快捷键,长密码,进程名,进程选中,网卡选中,昵称”, “,”, )
.如果真 (取数组成员数 (信息数组) ≠ 取数组成员数 (模板数组))
    信息框 (“内部错误：” ＋ #换行符 ＋ “设置模板数量与设置项目不匹配，” ＋ #换行符 ＋ “无法保存设置！”, 16, , )
    返回 (假)
.如果真结束
.计次循环首 (取数组成员数 (信息数组), 已次数)
    信息数组 [已次数] ＝ 文本_替换 (信息数组 [已次数], , , , “</*内容*/>”, “”)  ' 加个内容是怕空行被忽略导致错位
    生成信息 ＝ 生成信息 ＋ “<” ＋ 模板数组 [已次数] ＋ “>” ＋ 信息数组 [已次数] ＋ “</” ＋ 模板数组 [已次数] ＋ “>” ＋ #换行符
.计次循环尾 ()
删除文件 (取运行目录 () ＋ “\” ＋ 取机器码 () ＋ “.ini”)
删除文件 (取运行目录 () ＋ “\GTASuperESC.ini”)
返回的状态 ＝ 写到文件 (取运行目录 () ＋ “\” ＋ 取机器码 () ＋ “.ini”, 编码_Ansi到Utf8 (生成信息))
置文件属性 (取运行目录 () ＋ “\” ＋ 取机器码 () ＋ “.ini”, #隐藏文件)
返回 (返回的状态)

.子程序 读取设置
.局部变量 全配置, 文本型

全配置 ＝ 编码_Utf8到Ansi (读入文件 (取运行目录 () ＋ “\” ＋ 取机器码 () ＋ “.ini”))
.如果真 (全配置 ＝ “”)
    全配置 ＝ 编码_Utf8到Ansi (读入文件 (取运行目录 () ＋ “\GTASuperESC.ini”))
    返回 ()
.如果真结束
.如果真 (到整数 (取出设置 (全配置, “端口号”)) ≠ 0)
    编辑框3.内容 ＝ 到文本 (到整数 (取出设置 (全配置, “端口号”)))
.如果真结束
组合框1.现行选中项 ＝ 到整数 (取出设置 (全配置, “功能键”, “0”))
组合框2.现行选中项 ＝ 到整数 (取出设置 (全配置, “快捷键”, “4”))
选择框1.选中 ＝ 到逻辑型 (取出设置 (全配置, “长密码”, “假”))
编辑框6.内容 ＝ 到文本 (取出设置 (全配置, “进程名”, “GTA5.exe”))
选择框2.选中 ＝ 到逻辑型 (取出设置 (全配置, “进程选中”, “真”))
选择框3.选中 ＝ 到逻辑型 (取出设置 (全配置, “网卡选中”, “假”))
编辑框5.内容 ＝ 到文本 (取出设置 (全配置, “昵称”))

.子程序 取出设置, 文本型
.参数 全设置, 文本型
.参数 取出项目, 文本型
.参数 空时操作, 文本型, 可空, 取出设置为空时返回什么

.如果 (文本_取出中间文本 (全设置, “<” ＋ 取出项目 ＋ “>”, “</” ＋ 取出项目 ＋ “>”) ≠ “”)
    返回 (文本_取出中间文本 (全设置, “<” ＋ 取出项目 ＋ “>”, “</” ＋ 取出项目 ＋ “>”))
.否则
    返回 (空时操作)
.如果结束


.子程序 检测创建支持
.局部变量 创建端口, 整数型
.局部变量 已次数, 整数型
.局部变量 检测结果, 整数型
.局部变量 测试次数, 整数型, , , 不能小于2
.局部变量 返回结果, 整数型

是否检测中 ＝ 真
测试次数 ＝ 3
编辑框1.加入文本 (#换行符 ＋ “检测能否自动创建房间(自动在本机创建服务器)：”)
编辑框1.加入文本 (#换行符 ＋ “内网IP：”)
内网IP ＝ 取内网IP ()
编辑框1.加入文本 (内网IP)
编辑框1.加入文本 (#换行符 ＋ “公网IP：”)
外网IP ＝ 取外网IP ()
编辑框1.加入文本 (外网IP)
编辑框1.加入文本 (#换行符 ＋ “运营商：”)
当前运营商 ＝ 取运营商 (外网IP)
编辑框1.加入文本 (当前运营商)

.如果真 (外网IP ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ “无法获取外网IP，无法自动创建房间，请确认您是否已联网”)
    是否检测中 ＝ 假
    返回 ()
.如果真结束
.计次循环首 (测试次数, 已次数)
    置随机数种子 ()
    .如果 (已次数 ＝ 测试次数)
        创建端口 ＝ 26576
    .否则
        创建端口 ＝ 取随机数 (10001, 32767)
    .如果结束
    编辑框1.加入文本 (#换行符 ＋ “创建” ＋ 外网IP ＋ “:” ＋ 到文本 (创建端口) ＋ “的UPnP映射”)
    传递_描述 ＝ “GTASuperESC_” ＋ 到文本 (取随机数 (1000, 9999))
    传递_创建端口 ＝ 创建端口
    传递_本地端口 ＝ 26576
    创建upnp时钟.时钟周期 ＝ 1
    延迟 (500)
    ' 编辑框1.加入文本 (#换行符 ＋ “测试是否可用：”)
    检测结果 ＝ 检查端口开放 (外网IP, 创建端口)
    编辑框1.加入文本 (#换行符 ＋ “综合检测结果：”)
    .如果真 (检测结果 ＝ 1 或 检测结果 ＝ 10)
        .如果 (检测结果 ＝ 10)
            编辑框1.加入文本 (“应该可用”)
        .否则
            编辑框1.加入文本 (“可用”)
        .如果结束
        按钮1.禁止 ＝ 假
        使用端口 ＝ 创建端口
        时钟创建房间.时钟周期 ＝ 1
        跳出循环 ()
    .如果真结束
    .如果真 (检测结果 ＝ 0)
        编辑框1.加入文本 (“不可用”)
        .如果真 (已次数 ＝ 测试次数)
            编辑框1.加入文本 (#换行符 ＋ “”)
            编辑框1.加入文本 (#换行符 ＋ “自动创建房间(服务器)要求必须符合三点”)
            编辑框1.加入文本 (#换行符 ＋ “1.有公网IP，也就是说不能和别人共享IP，百度公网IP;”)
            编辑框1.加入文本 (#换行符 ＋ “  无公网IP可投诉运营商,若投诉没用可到工信部投诉”)
            编辑框1.加入文本 (#换行符 ＋ “  工信部投诉后不给解决扣工资,所以工信部投诉很管用”)
            编辑框1.加入文本 (#换行符 ＋ “2.路由器启用了UPnP或PC直连或DMZ(一般都开了UPnP)”)
            编辑框1.加入文本 (#换行符 ＋ “  而且UPnP对应三个服务不能关闭,” ＋ #引号 ＋ “优化” ＋ #引号 ＋ “服务别关这些”)
            编辑框1.加入文本 (#换行符 ＋ “  若光猫拨号作为路由后面再接路由就是套两层路由，”)
            编辑框1.加入文本 (#换行符 ＋ “  建议改为路由拨号或光猫里设路由IP为DMZ主机或路由”)
            编辑框1.加入文本 (#换行符 ＋ “  器关DHCP服务器,光猫接路由LAN口,但以后设置很麻烦”)
            编辑框1.加入文本 (#换行符 ＋ “3.网络的连接类型设为专用(家庭/单位那个信任的网络)”)
            编辑框1.加入文本 (#换行符 ＋ “  且防火墙提示时勾选允许访问再确定,不然防火墙拦截”)
            编辑框1.加入文本 (#换行符 ＋ “”)
            编辑框1.加入文本 (#换行符 ＋ “ 也可使用内网穿透手动创建房间，操作很简单，教程：”)
            编辑框1.加入文本 (#换行符 ＋ “ https://www.bilibili.com/video/av28899499/?p=2”)
            编辑框1.加入文本 (#换行符 ＋ “ 若www.natfrp.org打不开,可在↑B站视频的选集中使用”)
            编辑框1.加入文本 (#换行符 ＋ “ NATAPP(实名延迟低)或网络通(方便延迟高)来创建映射”)
            编辑框1.加入文本 (#换行符 ＋ “ 不建议使用长城这类宽带创建房间，可能根本创建不了”)
            载入 (窗口1, _启动窗口, 真)  ' 之前那个改信息框按钮标题的竟然只在调试时有效。。
        .如果真结束
        注销upnp ()
    .如果真结束
    .如果真 (检测结果 ＝ 100)
        编辑框1.加入文本 (“检测失败”)
        注销upnp ()
    .如果真结束

.计次循环尾 ()
是否检测中 ＝ 假

.子程序 创建upnp
.参数 协议, 文本型, , TCP或UDP
.参数 本地端口, 整数型
.参数 映射端口, 整数型
.参数 描述, 文本型, 可空
.局部变量 upnpnat, 对象

upnpnat.创建 (“{AE1E00AA-3FD5-403C-8A27-2BBDC30CD0E1}”, )
map ＝ upnpnat.读对象型属性 (“StaticPortMappingCollection”, ).对象型方法 (“Add”, 映射端口, 协议, 本地端口, 取内网IP (), 真, 描述)

.子程序 注销upnp

map.方法 (“Enable”, 假)
map.清除 ()

.子程序 检查端口开放, 整数型, , 0=失败1=成功10=可能成功100=查询失败
.参数 IPc, 文本型
.参数 端口c, 整数型
.参数 调试, 逻辑型, 可空, 为真时把所有网站都测试一次
.局部变量 全网站, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 当前网站, 文本型
.局部变量 访问的, 字节集
.局部变量 访问结果, 文本型
.局部变量 toolcookies, 文本型
.局部变量 访问方式, 整数型
.局部变量 成功次数, 整数型
.局部变量 失败次数, 整数型
.局部变量 未知次数, 整数型
.局部变量 此次成功, 逻辑型
.局部变量 计时a, 长整数型
.局部变量 HTTP状态, 整数型
.局部变量 全失败信息, 文本型, , "0"
.局部变量 内已次数, 整数型
.局部变量 此次失败, 逻辑型

' <0>编码<1>提交方式<2>提交地址<3>提交信息<4>成功信息<5>失败信息<#>第二个失败信息(可不写<#>与第二个)<6>cookie验证地址<7>超时时间(秒)<8>输出信息<9>
全网站 ＝ 分割文本 (#端口测试网站, #换行符, )
.计次循环首 (取数组成员数 (全网站), 已次数)
    此次成功 ＝ 假
    toolcookies ＝ “”
    当前网站 ＝ 文本_替换 (全网站 [已次数], , , , “[IP地址]”, IPc, “[端口]”, 到文本 (端口c))
    编辑框1.加入文本 (#换行符 ＋ 文本_取出中间文本 (当前网站, “<8>”, “<9>”))
    调试输出 (文本_取出中间文本 (当前网站, “<8>”, “<9>”))
    .如果真 (文本_取出中间文本 (当前网站, “<6>”, “<7>”) ≠ “”)
        计时a ＝ 到长整数 (时间_取现行时间戳 ())
        网页_访问_对象 (文本_取出中间文本 (当前网站, “<6>”, “<7>”), , , , toolcookies, , , , , , , 2)
        调试输出 (“获取cookie耗时” ＋ 到文本 (到长整数 (时间_取现行时间戳 ()) － 计时a))
    .如果真结束
    访问方式 ＝ 0
    .如果真 (文本_取出中间文本 (当前网站, “<1>”, “<2>”) ＝ “POST”)
        访问方式 ＝ 1
    .如果真结束
    计时a ＝ 到长整数 (时间_取现行时间戳 ())
    访问的 ＝ 网页_访问_对象 (文本_取出中间文本 (当前网站, “<2>”, “<3>”), 访问方式, 文本_取出中间文本 (当前网站, “<3>”, “<4>”), toolcookies, , , , HTTP状态, , , , 到整数 (文本_取出中间文本 (当前网站, “<7>”, “<8>”)))
    调试输出 (“访问耗时” ＋ 到文本 (到长整数 (时间_取现行时间戳 ()) － 计时a))
    .如果 (文本_取出中间文本 (当前网站, “<0>”, “<1>”) ＝ “ANSI”)
        访问结果 ＝ 到文本 (访问的)
    .否则
        访问结果 ＝ 编码_Utf8到Ansi (访问的)
    .如果结束
    .如果真 (快速取出现次数 (访问结果, 文本_取出中间文本 (当前网站, “<4>”, “<5>”)) ≠ 0)
        成功次数 ＝ 成功次数 ＋ 1
        此次成功 ＝ 真
        编辑框1.加入文本 (“可用”)
        调试输出 (“可用”)
    .如果真结束
    清除数组 (全失败信息)
    全失败信息 ＝ 分割文本 (文本_取出中间文本 (当前网站, “<5>”, “<6>”), “<#>”, )
    此次失败 ＝ 假
    .计次循环首 (取数组成员数 (全失败信息), 内已次数)
        .如果真 (快速取出现次数 (访问结果, 全失败信息 [内已次数]) ≠ 0)
            此次失败 ＝ 真
        .如果真结束

    .计次循环尾 ()
    .如果真 (此次失败)
        失败次数 ＝ 失败次数 ＋ 1
        此次成功 ＝ 真
        编辑框1.加入文本 (“不可用”)
        调试输出 (“不可用”)
    .如果真结束
    .如果真 (此次成功 ＝ 假)
        未知次数 ＝ 未知次数 ＋ 1
        调试输出 (访问结果)
        .如果 (HTTP状态 ＝ 200)
            编辑框1.加入文本 (“无法检测”)
            调试输出 (“无法检测”)
        .否则
            编辑框1.加入文本 (“检测失败”)
            调试输出 (“检测失败”)
        .如果结束

    .如果真结束
    .如果真 (成功次数 ≥ 2 且 调试 ＝ 假)
        返回 (1)
    .如果真结束
    .如果真 (失败次数 ≥ 2 且 调试 ＝ 假)
        返回 (0)
    .如果真结束

.计次循环尾 ()
.如果真 (调试)
    .如果真 (成功次数 ≥ 2)
        返回 (1)
    .如果真结束
    .如果真 (失败次数 ≥ 2)
        返回 (0)
    .如果真结束

.如果真结束
.如果真 (失败次数 ＝ 1 且 成功次数 ＝ 0)
    返回 (0)
.如果真结束
.如果真 (成功次数 ＝ 1)
    返回 (10)
.如果真结束
返回 (100)

.子程序 快速取出现次数, 整数型
.参数 全部文本, 文本型
.参数 要找的文本, 文本型
.局部变量 全部内容, 快速文本对象

全部内容.置文本 (全部文本)
返回 (全部内容.替换子文本 (要找的文本, “”, , , 真))

.子程序 取外网IP, 文本型
.参数 快速, 逻辑型, 可空
.局部变量 访问结果, 文本型
.局部变量 返回状态, 整数型

.如果真 (快速 ＝ 假)
    访问结果 ＝ 到文本 (网页_访问_对象 (“http://wgzeyu.gtxcn.com/getip.php”, 0, , , , , , 返回状态, , , , 5))
    调试输出 (返回状态, 访问结果)
    .如果真 (返回状态 ＝ 200 且 是否为IPv4地址 (访问结果) ＝ 真)
        调试输出 (“WGzeyu服务器获取到IP” ＋ 访问结果)
        返回 (访问结果)
    .如果真结束

.如果真结束
访问结果 ＝ 到文本 (网页_访问_对象 (“http://ip.chinaz.com/getip.aspx”, 0, , , , , , 返回状态, , , , 3))
访问结果 ＝ 文本_取出中间文本 (访问结果, “ip:'”, “',”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 是否为IPv4地址 (访问结果) ＝ 真)
    调试输出 (“chinaz服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
访问结果 ＝ 编码_Utf8到Ansi (网页_访问_对象 (“https://ip.cn”, 0, , , , , , 返回状态, , , , 3))
访问结果 ＝ 文本_取出中间文本 (访问结果, “<p>您现在的 IP：<code>”, “</code></p><p>”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 是否为IPv4地址 (访问结果) ＝ 真)
    调试输出 (“IP.CN服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
访问结果 ＝ 到文本 (网页_访问_对象 (“http://ip.qq.com”, 0, , , , , , 返回状态, , , , 4))
访问结果 ＝ 文本_替换 (访问结果, , , , #引号, “'”)
访问结果 ＝ 文本_取出中间文本 (访问结果, “您当前的IP为：<span class='red'>”, “</span></p>”)
调试输出 (返回状态, 访问结果)
.如果真 (返回状态 ＝ 200 且 是否为IPv4地址 (访问结果) ＝ 真)
    调试输出 (“腾讯服务器获取到IP” ＋ 访问结果)
    返回 (访问结果)
.如果真结束
返回 (“”)

.子程序 取内网IP, 文本型
.局部变量 全IP, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 IP1, 文本型

IP1 ＝ 转换为IP地址 (“”)
.如果真 (取文本左边 (IP1, 8) ＝ “192.168.” 或 取文本左边 (IP1, 3) ＝ “10.”)
    返回 (IP1)
.如果真结束
全IP ＝ 取本机IP ()
.计次循环首 (取数组成员数 (全IP), 已次数)
    .如果真 (取文本左边 (全IP [已次数], 8) ＝ “192.168.” 或 取文本左边 (全IP [已次数], 3) ＝ “10.”)
        返回 (全IP [已次数])
    .如果真结束

.计次循环尾 ()
.如果真 (IP1 ≠ “”)
    返回 (IP1)
.如果真结束
.如果真 (取数组成员数 (全IP) ＞ 0)
    返回 (全IP [1])
.如果真结束
返回 (“”)

.子程序 获取网络信息, 逻辑型
.局部变量 读取内容, 文本型
.局部变量 全部内容, 文本型, , "0"
.局部变量 当前内容, 文本型
.局部变量 已次数, 整数型
.局部变量 当前网络, 网络信息

.如果真 (取数组成员数 (网络详情) ≠ 0)
    返回 (真)
.如果真结束
运行 (“cmd /c netsh interface show interface >>” ＋ #引号 ＋ 取运行目录 () ＋ “\jgDxPv4cFgeTU3K9.txt” ＋ #引号, 真, 3)
读取内容 ＝ 到文本 (读入文件 (取运行目录 () ＋ “\jgDxPv4cFgeTU3K9.txt”))
删除文件 (取运行目录 () ＋ “\jgDxPv4cFgeTU3K9.txt”)
读取内容 ＝ 文本_替换 (读取内容, , , , “-------------------------------------------------------------------------”, #换行符, “  ”, “ ”, “  ”, “ ”, “  ”, “ ”, #换行符 ＋ #换行符, “”)
读取内容 ＝ 文本_替换 (读取内容, , , , “---”, “”, “  ”, “ ”, “--”, “”, “   ”, “ ”, “--”, “”)
读取内容 ＝ 文本_替换 (“<>” ＋ 读取内容, , , , “<>” ＋ #换行符, “”, “<>”, “”, “  ”, “ ”, “-”, “”, “  ”, “ ”)
全部内容 ＝ 分割文本 (读取内容, #换行符, )
.如果真 (取数组成员数 (全部内容) ＞ 1)
    .计次循环首 (取数组成员数 (全部内容) － 1, 已次数)
        当前内容 ＝ 全部内容 [已次数 ＋ 1]
        .如果真 (快速取出现次数 (当前内容, “ ”) ＝ 3)
            当前网络.管理员状态 ＝ 文本_取出中间文本 (“<>” ＋ 当前内容, “<>”, “ ”)
            当前内容 ＝ 文本_替换 (“<>” ＋ 当前内容, , , , “<>” ＋ 当前网络.管理员状态 ＋ “ ”, “”)
            当前网络.状态 ＝ 文本_取出中间文本 (“<>” ＋ 当前内容, “<>”, “ ”)
            当前内容 ＝ 文本_替换 (“<>” ＋ 当前内容, , , , “<>” ＋ 当前网络.状态 ＋ “ ”, “”)
            当前网络.类型 ＝ 文本_取出中间文本 (“<>” ＋ 当前内容, “<>”, “ ”)
            当前网络.接口名称 ＝ 文本_替换 (“<>” ＋ 当前内容, , , , “<>” ＋ 当前网络.类型 ＋ “ ”, “”)
            加入成员 (网络详情, 当前网络)
        .如果真结束

    .计次循环尾 ()
.如果真结束
.如果真 (取数组成员数 (网络详情) ＝ 0)
    返回 (假)
.如果真结束
返回 (真)

.子程序 _创建upnp时钟_周期事件

创建upnp时钟.时钟周期 ＝ 0
创建upnp (“TCP”, 传递_本地端口, 传递_创建端口, 传递_描述)

.子程序 干掉GTA
.参数 是否广播, 逻辑型, 可空
.局部变量 全部进程名, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 是否等待, 逻辑型

.如果真 (到长整数 (时间_取现行时间戳 ()) － 上次干掉时间 ＜ 500)  ' 0.5秒内不重复执行
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:0.5秒内已执行过，不重复执行”)
    返回 ()
.如果真结束
上次干掉时间 ＝ 到长整数 (时间_取现行时间戳 ())
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:开始执行”)
.如果真 (选择框2.选中)
    全部进程名 ＝ 分割文本 (文本_替换 (编辑框6.内容, , , 假, “，”, “,”, “.exe ”, “.exe,”, “|”, “,”, “/”, “,”, “.exe+”, “.exe,”), “,”, )
    .如果 (按钮2.禁止 且 是否广播)
        是否等待 ＝ 假
    .否则
        .如果 (选择框3.选中 且 选择框3.禁止 ＝ 假)
            是否等待 ＝ 假
        .否则
            是否等待 ＝ 真
        .如果结束

    .如果结束
    .计次循环首 (取数组成员数 (全部进程名), 已次数)
        .如果 (进程_结束1 (全部进程名 [已次数]))
            编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:成功结束” ＋ 全部进程名 [已次数] ＋ “进程”)
        .否则
            .如果 (进程_是否存在 (全部进程名 [已次数]))
                编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:结束” ＋ 全部进程名 [已次数] ＋ “进程失败，尝试使用taskkill强制结束”)
                运行 (“taskkill /f /im ” ＋ #引号 ＋ 全部进程名 [已次数] ＋ #引号, 是否等待, 3)
                .如果 (是否等待)
                    .如果 (进程_是否存在 (全部进程名 [已次数]))
                        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:强制结束” ＋ 全部进程名 [已次数] ＋ “进程失败”)
                    .否则
                        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:成功强制结束” ＋ 全部进程名 [已次数] ＋ “进程”)
                    .如果结束

                .否则
                    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:为节省时间,不等待taskkill命令执行完毕开始执行下一项”)
                .如果结束

            .否则
                编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:进程” ＋ 全部进程名 [已次数] ＋ “本来就不存在”)
            .如果结束


        .如果结束

    .计次循环尾 ()
.如果真结束
.如果真 (按钮2.禁止 且 是否广播)
    发送数据 (封装数据 (“KILLGTA”, 加密秘钥))
    发送数据 (封装数据 (“KILLGTA”, 加密秘钥))
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:已发送两次数据到其他客户端”)
.如果真结束
.如果真 (选择框3.选中 且 选择框3.禁止 ＝ 假)
    .如果真 (按钮2.禁止 ＝ 真)
        程序_延时 (400)
    .如果真结束
    运行 (“netsh interface set interface ” ＋ #引号 ＋ 组合框3.内容 ＋ #引号 ＋ “ disabled”, 假, 3)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “干掉GTA:已禁用” ＋ 组合框3.取项目文本 (组合框3.现行选中项))
.如果真结束


.子程序 _按钮1_被单击

编辑框1.内容 ＝ “输出内容：”
按钮1.禁止 ＝ 真
启动线程 (&检测创建支持, , 测试句柄)

.子程序 自动创建房间
.局部变量 房间号, 文本型
.局部变量 内网房间号, 文本型

' 创建服务器
加密秘钥 ＝ “”
.如果 (选择框1.选中 ＝ 真)
    加密秘钥 ＝ 生成随机密码 (128)
.否则
    加密秘钥 ＝ 生成随机密码 (6)
.如果结束
调试输出 (“使用端口”, 使用端口)
房间号 ＝ 外网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
内网房间号 ＝ 内网IP ＋ “:26576!” ＋ 加密秘钥
房间号 ＝ “#” ＋ 编码_BASE64编码 (文本_加密c (房间号, “O42xiMVordM72pvE”))
置剪辑板文本 (房间号)
编辑框1.加入文本 (#换行符 ＋ “已成功自动创建房间(服务器)，” ＋ #换行符 ＋ “内网房间号：” ＋ 内网房间号 ＋ #换行符 ＋ “公网房间号：” ＋ 房间号 ＋ #换行符 ＋ “已复制到剪辑板，请注意不要公开发布房间号，以防游戏中途被别人关游戏”)
编辑框2.内容 ＝ 房间号
心跳包.时钟周期 ＝ 2000
编辑框4.禁止 ＝ 假
编辑框2.输入方式 ＝ 1
按钮5.禁止 ＝ 假
按钮1.禁止 ＝ 真
编辑框5.禁止 ＝ 假
按钮2.禁止 ＝ 真
按钮4.禁止 ＝ 真
编辑框3.禁止 ＝ 真
选择框1.禁止 ＝ 真
选择框4.禁止 ＝ 真
选择框4.选中 ＝ 假
调试输出 (房间号)

.子程序 生成随机密码, 文本型
.参数 位数, 整数型
.局部变量 全字符, 文本型
.局部变量 随机字符, 文本型, , "0"
.局部变量 已次数, 整数型
.局部变量 种子, 文本型
.局部变量 生成字符, 文本型
.局部变量 第几个, 整数型

全字符 ＝ “a.b.c.d.e.f.g.h.i.j.k.l.m.n.o.p.q.r.s.t.u.v.w.x.y.z”
全字符 ＝ 全字符 ＋ “.” ＋ 到大写 (全字符) ＋ “.1.2.3.4.5.6.7.8.9.0”
随机字符 ＝ 分割文本 (全字符, “.”, )
.计次循环首 (位数, 已次数)
    种子 ＝ 取文本右边 (时间_取现行时间戳 (), 5) ＋ 到文本 (取随机数 (1, 99999))
    置随机数种子 (到整数 (种子))
    第几个 ＝ 取随机数 (1, 取数组成员数 (随机字符))
    生成字符 ＝ 生成字符 ＋ 随机字符 [第几个]
.计次循环尾 ()
返回 (生成字符)

.子程序 __启动窗口_将被销毁

注销upnp ()

.子程序 _按钮4_被单击
.局部变量 内网房间号, 文本型
.局部变量 本机房间号, 文本型

.如果真 (到整数 (编辑框3.内容) ＝ 0)
    信息框 (“请输入端口号”, 0, , )
    返回 ()
.如果真结束
按钮4.禁止 ＝ 真
.如果真 (内网IP ＝ “”)
    内网IP ＝ 取内网IP ()
.如果真结束
.如果 (当前运营商 ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ “正在检测网络运营商。。”)
    处理事件 ()
    .如果真 (外网IP ＝ “”)
        外网IP ＝ 取外网IP (真)
    .如果真结束
    当前运营商 ＝ 取运营商 (外网IP, 假, 真)
    .如果 (当前运营商 ＝ “”)
        .如果 (外网IP ＝ “”)
            编辑框1.内容 ＝ 文本_替换 (编辑框1.内容, , , , “正在检测网络运营商。。”, “公网IP获取失败”)
        .否则
            编辑框1.内容 ＝ 文本_替换 (编辑框1.内容, , , , “正在检测网络运营商。。”, “运营商检测失败”)
        .如果结束

    .否则
        编辑框1.内容 ＝ 文本_替换 (编辑框1.内容, , , , “正在检测网络运营商。。”, “当前网络:” ＋ 当前运营商)
    .如果结束
    编辑框1.加入文本 (“”)
.否则
    编辑框1.加入文本 (#换行符 ＋ “当前网络:” ＋ 当前运营商)
.如果结束
使用端口 ＝ 到整数 (编辑框3.内容)
服务器1.端口 ＝ 使用端口
加密秘钥 ＝ “”
.如果 (选择框1.选中 ＝ 真)
    加密秘钥 ＝ 生成随机密码 (128)
.否则
    加密秘钥 ＝ 生成随机密码 (6)
.如果结束
内网房间号 ＝ 内网IP ＋ “:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
本机房间号 ＝ “127.0.0.1:” ＋ 到文本 (使用端口) ＋ “!” ＋ 加密秘钥
强制结束线程 (测试句柄)
是否检测中 ＝ 假
编辑框2.内容 ＝ 内网房间号
置剪辑板文本 (内网房间号)
编辑框1.加入文本 (#换行符 ＋ “已手动创建房间(服务器)，” ＋ #换行符 ＋ “内网房间号：” ＋ 内网房间号 ＋ #换行符 ＋ “房间号=地址:端口!” ＋ 加密秘钥 ＋ #换行符 ＋ “手动创建请自行设置端口映射，注意别被防火墙拦截”)
心跳包.时钟周期 ＝ 2000
编辑框4.禁止 ＝ 假
按钮5.禁止 ＝ 假
注销upnp ()
编辑框2.输入方式 ＝ 1
按钮1.禁止 ＝ 真
编辑框5.禁止 ＝ 假
按钮2.禁止 ＝ 真

编辑框3.禁止 ＝ 真
选择框1.禁止 ＝ 真
选择框4.禁止 ＝ 真
选择框4.选中 ＝ 假

.子程序 收到数据
.参数 数据, 字节集
.局部变量 内容, 文本型

内容 ＝ 解包数据 (数据, 加密秘钥)
.如果 (内容 ≠ “”)
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 ())
.否则
    返回 ()
.如果结束
.如果真 (内容 ＝ “KILLGTA”)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，开始执行干掉GTA”)
    干掉GTA ()
    返回 ()
.如果真结束
.如果真 (内容 ＝ “OK”)
    返回 ()
.如果真结束
.如果真 (内容 ＝ “OKOK”)
    .如果真 (延迟发送时间 ≠ 0)
        加入延迟 (到长整数 (时间_取现行时间戳 ()) － 延迟发送时间)
        延迟发送时间 ＝ 0
        检测延迟超时.时钟周期 ＝ 0
        更新延迟显示 ()
    .如果真结束
    返回 ()
.如果真结束
.如果真 (内容 ＝ “PING”)
    .如果真 (延迟发送时间 ≠ 0)
        加入延迟 (到长整数 (时间_取现行时间戳 ()) － 延迟发送时间)
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ 警告：服务器版本过低，无法检测延迟，请提醒房主更新软件，已关闭实时检测延迟，不影响其他功能使用”)
        发送数据 (封装数据 (“上个数据为检测PING发出，但服务器版本过低，不支持，建议房主更新软件”, 加密秘钥))
        延迟发送时间 ＝ 0
        检测延迟超时.时钟周期 ＝ 0
        更新延迟显示 ()
    .如果真结束
    ping时钟.时钟周期 ＝ 0
    返回 ()
.如果真结束
.如果真 (内容 ＝ “上个数据为检测PING发出，但服务器版本过低，不支持，建议房主更新软件”)
    返回 ()
.如果真结束
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ ” ＋ 内容)

.子程序 解包数据, 文本型
.参数 内容a, 字节集
.参数 秘钥, 文本型
.参数 是否只检测, 逻辑型, 可空
.局部变量 内容, 文本型
.局部变量 MD5b, 文本型
.局部变量 MD5c, 文本型
.局部变量 验证, 文本型
.局部变量 已次数, 整数型

内容 ＝ 文本_解密c (内容a, 秘钥)
.如果真 (内容 ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，解密失败已丢弃，若只有此数据请检查房间号是否正确。”)
    返回 (“”)
.如果真结束
.如果真 (快速取出现次数 (内容, “<md5>”) ＝ 0 或 快速取出现次数 (内容, “</hash>”) ＝ 0)
    .如果 (快速取出现次数 (内容, “<md5>”) ＝ 1 或 快速取出现次数 (内容, “</hash>”) ＝ 1)
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，数据不完整已丢弃。”)
    .否则
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，解密失败已丢弃，若只有此数据请检查房间号是否正确。”)
    .如果结束
    返回 (“”)
.如果真结束
MD5b ＝ 文本_取出中间文本 (内容, “<md5>”, “</md5>”)
内容 ＝ “<body>” ＋ 文本_取出中间文本 (内容, “<body>”, “</body>”) ＋ “</body>”
验证 ＝ 文本_取出中间文本 (内容, “<hash>”, “</hash>”)
MD5c ＝ 校验_取md5 (到字节集 (内容), 真)
.如果真 (验证 ＝ “” 或 MD5b ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，数据不完整已丢弃。”)
    返回 (“”)
.如果真结束
.如果真 (MD5b ≠ MD5c)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到数据，校验失败已丢弃。”)
    返回 (“”)
.如果真结束
.计次循环首 (取数组成员数 (已收到过的数据), 已次数)
    .如果真 (已收到过的数据 [已次数] ＝ 验证)
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “收到重复数据，为防重放已丢弃。”)
        返回 (“”)
    .如果真结束

.计次循环尾 ()
.如果真 (是否只检测 ＝ 假)
    加入成员 (已收到过的数据, 验证)
.如果真结束
返回 (文本_替换 (文本_取出中间文本 (内容, “<body>”, “</body>”), , , , “<hash>” ＋ 验证 ＋ “</hash>”, “”))

.子程序 _服务器1_数据到达
.局部变量 收到的数据, 字节集

收到的数据 ＝ 服务器1.取回数据 ()
.如果真 (ping包检测 (收到的数据, 服务器1.取回客户 ()))
    返回 ()
.如果真结束
发送数据 (收到的数据)
收到数据 (收到的数据)

.子程序 ping包检测, 逻辑型
.参数 数据, 字节集
.参数 客户, 文本型
.局部变量 内容, 文本型

内容 ＝ 解包数据 (数据, 加密秘钥, 真)
.如果真 (内容 ＝ “PING”)
    服务器1.发送数据 (客户, 封装数据 (“OKOK”, 加密秘钥), 2)
    返回 (真)
.如果真结束
.如果真 (内容 ＝ “”)
    返回 (真)
.如果真结束
返回 (假)

.子程序 封装数据, 字节集
.参数 内容, 文本型
.参数 秘钥, 文本型
.局部变量 MD5a, 文本型

置随机数种子 ()
内容 ＝ “<body><hash>” ＋ 时间_取现行时间戳 () ＋ “!” ＋ 到文本 (取随机数 (1000, 65535)) ＋ “</hash>” ＋ 内容 ＋ “</body>”
MD5a ＝ 校验_取md5 (到字节集 (内容), 真)
内容 ＝ 内容 ＋ “<md5>” ＋ MD5a ＋ “</md5>”
返回 (文本_加密c (内容, 秘钥))

.子程序 发送数据
.参数 发送的数据, 字节集
.局部变量 已次数, 整数型
.局部变量 循环次数, 整数型
.局部变量 计时, 长整数型

.如果 (是否关闭服务器 ＝ 假)
    循环次数 ＝ 取数组成员数 (全客户)
    .计次循环首 (循环次数, 已次数)
        ' 计时 ＝ 到长整数 (时间_取现行时间戳 ())
        服务器1.发送数据 (全客户 [已次数], 发送的数据, 2)
        ' 编辑框1.加入文本 (#换行符 ＋ 到文本 (到长整数 (时间_取现行时间戳 ()) － 计时))
    .计次循环尾 ()
.否则
    ' 计时 ＝ 到长整数 (时间_取现行时间戳 ())
    客户1.发送数据 (发送的数据)
    ' 编辑框1.加入文本 (#换行符 ＋ 到文本 (到长整数 (时间_取现行时间戳 ()) － 计时))
.如果结束


.子程序 _服务器1_客户进入

.如果 (是否关闭服务器)
    服务器1.断开客户 (服务器1.取回客户 ())
.否则
    加入成员 (全客户, 服务器1.取回客户 ())
    .如果真 (是否检测中 ＝ 假)
        发送数据 (封装数据 (“有人加入房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”, 加密秘钥))
        编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “有人加入房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”)
        ' 编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ 服务器1.取回客户 ())
    .如果真结束

.如果结束


.子程序 _服务器1_客户离开
.局部变量 已次数, 整数型
.局部变量 删除的客户, 文本型

删除的客户 ＝ 服务器1.取回客户 ()
.计次循环首 (取数组成员数 (全客户), 已次数)
    .如果真 (全客户 [已次数] ＝ 删除的客户)
        删除成员 (全客户, 已次数, 1)
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (是否检测中 ＝ 假)
    发送数据 (封装数据 (“有人离开房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”, 加密秘钥))
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “有人离开房间，现在房间内共” ＋ 到文本 (取数组成员数 (全客户) ＋ 1) ＋ “人”)
.如果真结束


.子程序 _心跳包_周期事件

发送数据 (封装数据 (“OK”, 加密秘钥))

.子程序 _心跳包检测_周期事件

.如果真 (到长整数 (时间_取现行时间戳 ()) － 上次接收时间 ＞ 心跳包周期)
    编辑框1.加入文本 (#换行符 ＋ 到文本 (心跳包周期 ÷ 1000) ＋ “秒未收到心跳包，重新连接服务器”)
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 ())
    重连服务器.时钟周期 ＝ 1
.如果真结束


.子程序 _重连服务器_周期事件

重连服务器.时钟周期 ＝ 0
客户1.断开连接 ()
.如果 (客户1.连接 (服务器IP, 使用端口))
    编辑框1.加入文本 (#换行符 ＋ “成功连接服务器”)
.否则
    编辑框1.加入文本 (#换行符 ＋ “服务器连接失败”)
.如果结束


.子程序 _按钮5_被单击

.如果真 (编辑框4.内容 ≠ “”)
    .如果 (编辑框5.内容 ＝ “”)
        发送数据 (封装数据 (“信息:” ＋ 编辑框4.内容, 加密秘钥))
    .否则
        发送数据 (封装数据 (编辑框5.内容 ＋ “:” ＋ 编辑框4.内容, 加密秘钥))
    .如果结束
    .如果真 (是否关闭服务器 ＝ 假)
        .如果 (编辑框5.内容 ＝ “”)
            编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ 信息:” ＋ 编辑框4.内容)
        .否则
            编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ ” ＋ 编辑框5.内容 ＋ “:” ＋ 编辑框4.内容)
        .如果结束

    .如果真结束
    编辑框4.内容 ＝ “”
.如果真结束


.子程序 _编辑框4_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    _按钮5_被单击 ()
    返回 (假)
.如果真结束


.子程序 _客户1_数据到达

收到数据 (客户1.取回数据 ())

.子程序 _客户1_连接断开

编辑框1.加入文本 (#换行符 ＋ “连接断开，重新连接服务器”)
上次接收时间 ＝ 到长整数 (时间_取现行时间戳 ())
重连服务器.时钟周期 ＝ 1

.子程序 _按钮2_被单击
.局部变量 临时内容, 文本型

.如果真 (编辑框2.内容 ＝ “”)
    返回 ()
.如果真结束
临时内容 ＝ 编辑框2.内容
.如果真 (取文本左边 (编辑框2.内容, 1) ＝ “#”)
    临时内容 ＝ 文本_解密c (编码_BASE64解码 (取文本右边 (编辑框2.内容, 取文本长度 (编辑框2.内容) － 1)), “O42xiMVordM72pvE”)
.如果真结束
服务器IP ＝ 文本_取出中间文本 (“@” ＋ 临时内容, “@”, “:”)
使用端口 ＝ 到整数 (文本_取出中间文本 (临时内容, “:”, “!”))
加密秘钥 ＝ 文本_取出中间文本 (临时内容 ＋ “@”, “!”, “@”)
.如果真 (服务器IP ＝ “” 或 使用端口 ＝ 0 或 加密秘钥 ＝ “”)
    编辑框2.内容 ＝ “”
    返回 ()
.如果真结束
.如果 (客户1.连接 (服务器IP, 使用端口))
    上次接收时间 ＝ 到长整数 (时间_取现行时间戳 ())
    心跳包检测.时钟周期 ＝ 100
    是否关闭服务器 ＝ 真
    编辑框4.禁止 ＝ 假
    编辑框2.输入方式 ＝ 1
    按钮5.禁止 ＝ 假
    编辑框5.禁止 ＝ 假
    按钮1.禁止 ＝ 真
    按钮2.禁止 ＝ 真
    按钮4.禁止 ＝ 真
    编辑框3.禁止 ＝ 真
    选择框1.禁止 ＝ 真
    标签2.标题 ＝ “延迟:”
    标签延迟.可视 ＝ 真
    ping时钟.时钟周期 ＝ 5000
    编辑框1.加入文本 (#换行符 ＋ “服务器连接成功,已加入房间，左侧显示的延迟为GTASuperESC当前客户端到服务器(本软件到房主软件)的来回耗时，不是游戏延迟”)
    强制结束线程 (测试句柄)
    启动线程 (&发送运营商, , )
    是否检测中 ＝ 假
.否则
    编辑框1.加入文本 (#换行符 ＋ “服务器连接失败,加入失败！”)
.如果结束


.子程序 发送运营商
.局部变量 当前运营商短, 文本型

.如果真 (外网IP ＝ “”)
    外网IP ＝ 取外网IP ()
.如果真结束
当前运营商短 ＝ 取运营商 (外网IP, 真)
.如果真 (当前运营商短 ≠ “”)
    发送数据 (封装数据 (“刚刚加入的用户网络运营商为:” ＋ 当前运营商短, 加密秘钥))
.如果真结束


.子程序 _标签3_反馈事件, 整数型
.参数 参数一, 整数型
.参数 参数二, 整数型

.如果真 (参数一 ＝ 热键)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “检测到快捷键，开始执行干掉GTA”)
    干掉GTA (真)
.如果真结束


.子程序 _组合框1_列表项被选择

注册热键a ()
触发保存 ()

.子程序 _组合框2_列表项被选择

注册热键a ()
触发保存 ()

.子程序 注册热键a

热键 ＝ 注册热键 (取窗口句柄 (), 标签3.取窗口句柄 (), 组合框1.现行选中项, 组合框2.现行选中项 ＋ 112)
.如果 (组合框1.现行选中项 ＝ 0)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “已将关闭GTA快捷键设为” ＋ 组合框2.取项目文本 (组合框2.现行选中项))
.否则
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “已将关闭GTA快捷键设为” ＋ 组合框1.取项目文本 (组合框1.现行选中项) ＋ “+” ＋ 组合框2.取项目文本 (组合框2.现行选中项))
.如果结束
编辑框1.加入文本 (#换行符 ＋ “建议先对快捷键进行测试，若与其他软件冲突可能会无法使用”)

.子程序 更新检测
.局部变量 访问结果, 文本型
.局部变量 循环次数, 整数型
.局部变量 读取版本, 整数型
.局部变量 更新内容, 文本型
.局部变量 已次数, 整数型
.局部变量 使用服务器, 文本型

.计次循环首 (4, 循环次数)
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.gtxcn.com/GTASuperESC/updatecheck.php”, 1, “ver=” ＋ 到文本 (当前版本), , , , , , , , , 5 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.gtxcn.com[加密,日本VPS+CloudFlare,只取新版内容]”  ' 使用PHP防止被cloudflare缓存,第一时间读取到更新,并且只输出比当前版本新的版本号,加载更快
    .如果真 (访问结果 ≠ “”)  ' 1默认使用带HTTPS的个人服务器读取更新
        跳出循环 ()
    .如果真结束
    访问结果 ＝ 到文本 (编码_BASE64解码 (文本_取出中间文本 (到文本 (网页_访问_对象 (“https://wgzeyu.github.io/GTASuperESC/updatecheck.txt”, 0, , , , , , , , , , 6 ＋ 循环次数 × 2)), “<base64>”, “</base64>”)))
    使用服务器 ＝ “HTTPS:wgzeyu.github.io[加密,GitHubIO]”
    .如果真 (访问结果 ≠ “”)  ' 2其次使用带HTTPS的GitHub读取更新
        跳出循环 ()
    .如果真结束

.计次循环尾 ()
.如果真 (访问结果 ＝ “”)
    编辑框1.加入文本 (#换行符 ＋ “检测更新失败，请检查网络连接是否正常”)
    调试输出 (“检测更新失败”)
    返回 ()
.如果真结束
调试输出 (访问结果)
读取版本 ＝ 到整数 (文本_取出中间文本 (访问结果, “<ver>”, “</ver>”))
调试输出 (“本地版本号：” ＋ 到文本 (当前版本) ＋ “ 在线版本号：” ＋ 到文本 (读取版本) ＋ “ 使用服务器：” ＋ 使用服务器)
.如果真 (读取版本 ＞ 当前版本)
    更新内容 ＝ “GTASuperESCv” ＋ 到文本 (当前版本 ÷ 10) ＋ “→v” ＋ 到文本 (读取版本 ÷ 10) ＋ “更新记录：” ＋ #换行符
    .计次循环首 (读取版本 － 当前版本, 已次数)
        .如果真 (文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ≠ “”)
            更新内容 ＝ 更新内容 ＋ 文本_取出中间文本 (访问结果, “<” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”, “</” ＋ 到文本 (读取版本 － 已次数 ＋ 1) ＋ “>”) ＋ #换行符
        .如果真结束

    .计次循环尾 ()
    编辑框1.加入文本 (#换行符 ＋ 文本_取出中间文本 (访问结果, “<txt>”, “</txt>”) ＋ #换行符 ＋ “下载地址：” ＋ 文本_取出中间文本 (访问结果, “<url>”, “</url>”))
    .如果真 (信息框 (文本_取出中间文本 (访问结果, “<txt>”, “</txt>”) ＋ #换行符 ＋ #换行符 ＋ 更新内容 ＋ #换行符 ＋ “是否更新？”, 36, “发现新版本”, ) ＝ 5)
        网页_打开指定网址 (文本_取出中间文本 (访问结果, “<url>”, “</url>”))
    .如果真结束

.如果真结束


.子程序 _按钮6_被单击

编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “检测到按键，开始执行干掉GTA”)
干掉GTA (真)

.子程序 _按钮8_被单击

网页_打开指定网址 (“https://github.com/wgzeyu/GTASuperESC/issues”)
网页_打开指定网址 (“https://t.me/WGzeyu”)
网页_打开指定网址 (“https://tieba.baidu.com/p/5801535859”)

.子程序 _按钮7_被单击

网页_打开指定网址 (“https://github.com/wgzeyu/GTASuperESC”)

.子程序 是否管理员, 逻辑型, 公开, 判断当前程序是否以管理员身份运行
.局部变量 WinVer, 短整数型
.局部变量 hToken, 整数型
.局部变量 te, TOKEN_ELEVATION
.局部变量 dwReturnLength, 整数型
.局部变量 bIsElevated, 逻辑型
.局部变量 Bin, 字节集

WinVer ＝ 位与 (GetVersion (), 65535)  ' 获取Windows 版本
Bin ＝ 到字节集 (WinVer)
WinVer ＝ Bin [1]
Bin [1] ＝ Bin [2]
Bin [2] ＝ WinVer
WinVer ＝ 取字节集数据 (Bin, #短整数型, )
.如果真 (WinVer ＜ 1536)  ' 如果当前系统木有 以管理员身份运行 介个功能
    返回 (假)
.如果真结束
.如果真 (OpenProcessToken (GetCurrentProcess (), 8, hToken) ≠ 0)  ' 打开访问令牌
    GetTokenInformation (hToken, 20, te, 4, dwReturnLength)  ' 获取令牌信息
    .如果真 (dwReturnLength ＝ 4)
        bIsElevated ＝ te.TokenIsElevated ≠ 0
    .如果真结束
    CloseHandle (hToken)  ' 关闭句柄
.如果真结束
返回 (bIsElevated)

.子程序 _按钮9_被单击

运行 (“netsh interface set interface ” ＋ #引号 ＋ 组合框3.内容 ＋ #引号 ＋ “ disabled”, 假, 3)

.子程序 _按钮10_被单击

运行 (“netsh interface set interface ” ＋ #引号 ＋ 组合框3.内容 ＋ #引号 ＋ “ enabled”, 假, 3)

.子程序 _选择框3_被单击

.如果真 (选择框3.选中)
    编辑框1.加入文本 (#换行符 ＋ “提示：断网速度没有结束进程快，可能会延迟个0.6秒左右才断网，建议还是使用结束进程，另外不建议GTASuperESC的房主使用断网”)
.如果真结束
触发保存 ()
检测断网选中 ()


.子程序 检测断网选中

.如果 (选择框3.选中 ＝ 真)
    .如果 (选择框3.禁止 ＝ 假)
        是否断网 ＝ 真
    .否则
        是否断网 ＝ 假
    .如果结束

.否则
    是否断网 ＝ 假
.如果结束


.子程序 _保存设置_周期事件

保存设置.时钟周期 ＝ 0
.如果 (保存设置 (到整数 (编辑框3.内容), 组合框1.现行选中项, 组合框2.现行选中项, 选择框1.选中, 编辑框6.内容, 选择框2.选中, 选择框3.选中, 编辑框5.内容))
    .如果真 (是否检测中 ＝ 假)
        编辑框1.加入文本 (#换行符 ＋ “保存设置成功”)
    .如果真结束

.否则
    编辑框1.加入文本 (#换行符 ＋ “保存设置失败”)
.如果结束


.子程序 _选择框1_被单击

触发保存 ()

.子程序 _编辑框3_内容被改变

触发保存 ()

.子程序 _编辑框6_内容被改变

触发保存 ()

.子程序 触发保存

保存设置.时钟周期 ＝ 0
保存设置.时钟周期 ＝ 保存周期

.子程序 _选择框2_被单击

触发保存 ()

.子程序 _编辑框4_内容被改变
.局部变量 已次数, 整数型

.如果真 (编辑框4.内容 ＝ “显示客户”)
    .计次循环首 (取数组成员数 (全客户), 已次数)
        编辑框1.加入文本 (#换行符 ＋ 全客户 [已次数])
    .计次循环尾 ()
    编辑框4.内容 ＝ “”
.如果真结束
.如果真 (编辑框4.内容 ＝ “白色背景”)
    编辑框4.内容 ＝ “”
    编辑框1.文本颜色 ＝ #黑色
    编辑框1.背景颜色 ＝ #白色
.如果真结束


.子程序 是否为IPv4地址, 逻辑型
.参数 检测文本, 文本型
.局部变量 全内容, 文本型, , "0"
.局部变量 已次数, 整数型

全内容 ＝ 分割文本 (检测文本, “.”, )
.如果真 (取数组成员数 (全内容) ≠ 4)
    返回 (假)
.如果真结束
.计次循环首 (取数组成员数 (全内容), 已次数)
    .如果真 (文本_是否为数字 (全内容 [已次数]) ＝ 假)
        返回 (假)
    .如果真结束
    .如果真 (到整数 (全内容 [已次数]) ＞ 255)
        返回 (假)
    .如果真结束

.计次循环尾 ()
返回 (真)

.子程序 _编辑框5_内容被改变

触发保存 ()

.子程序 _选择框4_被单击

.如果真 (选择框4.选中)  ' 这种经常断开长连接的宽带完全不能创建服务器，顺便禁止点击创建按钮
    按钮1.禁止 ＝ 真
    按钮4.禁止 ＝ 真
    选择框4.禁止 ＝ 真
    心跳包周期 ＝ 3000
    编辑框1.加入文本 (#换行符 ＋ “已开启严格心跳包，若创建房间的软件版本低于v0.7，可能导致无法正常连接”)
.如果真结束


.子程序 _时钟创建房间_周期事件

时钟创建房间.时钟周期 ＝ 0
自动创建房间 ()

.子程序 _ping时钟_周期事件

延迟发送时间 ＝ 到长整数 (时间_取现行时间戳 ())
客户1.发送数据 (封装数据 (“PING”, 加密秘钥))
检测延迟超时.时钟周期 ＝ 3000

.子程序 _检测延迟超时_周期事件

检测延迟超时.时钟周期 ＝ 0
延迟发送时间 ＝ 0
加入延迟 (0)
更新延迟显示 ()

.子程序 加入延迟
.参数 加入的数据, 整数型
.局部变量 当前延迟位置, 整数型

当前延迟位置 ＝ 上次延迟位置 ＋ 1
.如果真 (当前延迟位置 ＞ 5)
    当前延迟位置 ＝ 1
.如果真结束
全延迟 [当前延迟位置] ＝ 加入的数据
上次延迟 ＝ 加入的数据
上次延迟位置 ＝ 当前延迟位置

.子程序 更新延迟显示
.局部变量 全部延迟数据, 整数型
.局部变量 数据次数, 整数型
.局部变量 已次数, 整数型

.如果 (上次延迟 ≠ 0)
    .计次循环首 (5, 已次数)
        .如果真 (全延迟 [已次数] ≠ 0)
            全部延迟数据 ＝ 全部延迟数据 ＋ 全延迟 [已次数]
            数据次数 ＝ 数据次数 ＋ 1
        .如果真结束

    .计次循环尾 ()
    标签延迟.标题 ＝ 到文本 (四舍五入 (全部延迟数据 ÷ 数据次数, 1)) ＋ “ms”
.否则
    标签延迟.标题 ＝ “超时”
.如果结束


.子程序 取机器码, 文本型, , 确保软件被打包时不使用其他人的设置

返回 (取文本中间 (校验_取md5 (到字节集 (系统_取MAC地址 () ＋ 系统_取MAC地址 () ＋ 系统_取CPU型号 () ＋ 系统_取计算机名 () ＋ 系统_取系统版本 () ＋ 到文本 (系统_取硬盘特征字 ())), 真), 8, 8))

.子程序 _按钮3_被单击

载入 (教程窗口, _启动窗口, 假)

.子程序 取运营商, 文本型
.参数 IP地址, 文本型
.参数 只输出国家运营商, 逻辑型, 可空
.参数 不许重试, 逻辑型, 可空
.局部变量 访问内容, 文本型
.局部变量 返回状态, 整数型
.局部变量 全内容, 文本型, , "0"
.局部变量 输出内容, 文本型

访问内容 ＝ 编码_Utf8到Ansi (网页_访问_对象 (“http://freeapi.ipip.net/” ＋ IP地址, , , , , , , 返回状态, , , , 3))
访问内容 ＝ 文本_取出中间文本 (访问内容, “[”, “]”)
.如果真 (访问内容 ＝ “” 或 返回状态 ≠ 200)
    .如果真 (不许重试)
        返回 (“”)
    .如果真结束
    访问内容 ＝ 编码_Utf8到Ansi (网页_访问_对象 (“http://freeapi.ipip.net/” ＋ IP地址, , , , , , , 返回状态, , , , 7))
    访问内容 ＝ 文本_取出中间文本 (访问内容, “[”, “]”)
    .如果真 (访问内容 ＝ “” 或 返回状态 ≠ 200)
        返回 (“”)
    .如果真结束

.如果真结束
全内容 ＝ 分割文本 (访问内容, “,”, )
.如果真 (取数组成员数 (全内容) ≠ 5)
    返回 (“”)
.如果真结束
.如果真 (只输出国家运营商 ＝ 假)
    输出内容 ＝ 文本_替换 (访问内容, , , , #引号, “”, “,”, “”)
    返回 (输出内容)
.如果真结束
输出内容 ＝ 文本_替换 (全内容 [1], , , , #引号, “”)
输出内容 ＝ 输出内容 ＋ 文本_替换 (全内容 [5], , , , #引号, “”, “中国”, “”, “.com”, “”, “.net”, “”)  ' 防止输出“中国中国联通”
返回 (输出内容)

.子程序 _按钮11_被单击
.局部变量 信息框返回, 整数型

信息框返回 ＝ 信息框 (“原理:暂停GTA进程10秒后恢复” ＋ #换行符 ＋ “GTA5是运行在窗口模式吗？” ＋ #换行符 ＋ “窗口点是 全屏点否”, #取消是否钮 ＋ #询问图标, “GTA5卡单人公开战局”, _启动窗口)
.如果真 (信息框返回 ＝ #取消钮)
    返回 ()
.如果真结束
.如果真 (信息框返回 ＝ #是钮)
    启动线程 (&卡单人线程, 0, )
.如果真结束
.如果真 (信息框返回 ＝ #否钮)
    信息框 (“请在点击确定之后，立刻切换回GTA5” ＋ #换行符 ＋ “软件将在8秒后暂停GTA5进程10秒” ＋ #换行符 ＋ “GTA5进程恢复之前不要返回桌面”, #确认钮, “GTA5卡单人公开战局”, _启动窗口)
    启动线程 (&卡单人线程, 1, )
.如果真结束


.子程序 卡单人线程
.参数 是否全屏模式, 整数型
.局部变量 进程ID, 整数型

进程ID ＝ 取进程ID (“GTA5.exe”)
.如果真 (进程ID ＝ -1)
    编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ 未找到GTA5进程”)
    返回 ()
.如果真结束
.如果真 (是否全屏模式 ＝ 1)
    延时 (8000)
.如果真结束
进程_暂停 (进程ID, 真)
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ 已暂停GTA5进程”)
延时 (10000)
进程_暂停 (进程ID, 假)
编辑框1.加入文本 (#换行符 ＋ 时间_到文本 (, 1, 3) ＋ “ 已恢复GTA5进程”)

.子程序 取进程ID, 整数型
.参数 进程名称, 文本型, , 进程名称
.局部变量 进程信息数组, 进程信息, , "0"
.局部变量 计次, 整数型

进程信息数组 ＝ 取系统进程列表 ()
.计次循环首 (取数组成员数 (进程信息数组), 计次)
    .如果真 (到小写 (进程信息数组 [计次].进程名称) ＝ 到小写 (进程名称))
        返回 (进程信息数组 [计次].进程标识符)
    .如果真结束

.计次循环尾 ()
返回 (-1)
.版本 2

.程序集 窗口程序集_窗口1

.子程序 _窗口1_按下某键, 逻辑型
.参数 键代码, 整数型
.参数 功能键状态, 整数型

.如果真 (键代码 ＝ #回车键)
    _按钮1_被单击 ()
.如果真结束
返回 (真)

.子程序 _按钮1_被单击

网页_打开指定网址 (“https://wgzeyu.gtxcn.com/GTASuperESC/video.mp4”)
销毁 ()

.子程序 _按钮2_被单击

网页_打开指定网址 (“https://www.bilibili.com/video/av28899499/?p=2”)
销毁 ()

.子程序 _按钮3_被单击

销毁 ()
.版本 2
.支持库 EThread
.支持库 spec

.程序集 窗口程序集_教程窗口
.程序集变量 全图片, 字节集, , "0"
.程序集变量 图片数量, 整数型
.程序集变量 当前图片, 整数型
.程序集变量 全网址, 文本型, , "2"

.子程序 _教程窗口_创建完毕

当前图片 ＝ 1
时钟1.时钟周期 ＝ 10
全网址 [1] ＝ “https://wgzeyu.gtxcn.com/GTASuperESC/img/”
全网址 [2] ＝ “https://wgzeyu.github.io/GTASuperESC/img/”
启动线程 (&加载图片, 1, )
启动线程 (&加载图片, 2, )

.子程序 加载图片
.参数 传入第几个, 整数型
.局部变量 当前地址, 文本型
.局部变量 当前数量, 整数型
.局部变量 当前的图片, 字节集
.局部变量 返回状态, 整数型
.局部变量 失败次数, 整数型

当前地址 ＝ 全网址 [传入第几个]
当前数量 ＝ 1
.循环判断首 ()
    .如果真 (图片数量 ≠ 0)
        返回 ()
    .如果真结束
    当前的图片 ＝ 网页_访问_对象 (当前地址 ＋ 到文本 (当前数量) ＋ “.png”, , , , , , , 返回状态)
    .如果真 (返回状态 ＝ 404)
        图片数量 ＝ 当前数量 － 1
        返回 ()
    .如果真结束
    .如果 (图片_取宽度 (当前的图片) ＝ 600)
        .如果 (取数组成员数 (全图片) ＜ 当前数量)
            加入成员 (全图片, 当前的图片)
            调试输出 (网页_取域名 (当前地址), “最先获取到第”, 当前数量, “页”)
        .否则
            调试输出 (网页_取域名 (当前地址), “成功获取到第”, 当前数量, “页”)
        .如果结束
        当前数量 ＝ 当前数量 ＋ 1
    .否则
        失败次数 ＝ 失败次数 ＋ 1
        调试输出 (当前地址 ＋ 到文本 (当前数量) ＋ “.png”, “加载失败”)
        调试输出 (到文本 (当前图片))
        延时 (100)
    .如果结束

.循环判断尾 (失败次数 ＜ 20)

.子程序 _时钟1_周期事件

.如果 (取数组成员数 (全图片) ＜ 当前图片)
    .如果真 (图片框1.图片 ≠ #加载中图片)
        图片框1.图片 ＝ #加载中图片
        调试输出 (“载入加载中”)
    .如果真结束

.否则
    .如果真 (图片框1.图片 ≠ 全图片 [当前图片])
        图片框1.图片 ＝ 全图片 [当前图片]
        调试输出 (“载入图片”, 当前图片)
    .如果真结束

.如果结束
.如果真 (图片数量 ≠ 0)
    .如果真 (当前图片 ＞ 图片数量)
        当前图片 ＝ 图片数量
    .如果真结束
    .如果 (当前图片 ＝ 图片数量)
        .如果真 (按钮2.标题 ≠ “关闭”)
            按钮2.标题 ＝ “关闭”
        .如果真结束

    .否则
        .如果真 (按钮2.标题 ≠ “下一页”)
            按钮2.标题 ＝ “下一页”
        .如果真结束

    .如果结束


.如果真结束
.如果 (当前图片 ＝ 1)
    .如果真 (按钮1.禁止 ＝ 假)
        按钮1.禁止 ＝ 真
    .如果真结束

.否则
    .如果真 (按钮1.禁止 ＝ 真)
        按钮1.禁止 ＝ 假
    .如果真结束

.如果结束


.子程序 _按钮1_被单击

当前图片 ＝ 当前图片 － 1

.子程序 _按钮2_被单击

.如果 (当前图片 ＝ 图片数量)
    销毁 ()
.否则
    当前图片 ＝ 当前图片 ＋ 1
.如果结束


.子程序 _图片框1_鼠标左键被按下, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

当前图片 ＝ 当前图片 ＋ 1

.子程序 _图片框1_鼠标右键被按下, 逻辑型
.参数 横向位置, 整数型
.参数 纵向位置, 整数型
.参数 功能键状态, 整数型

.如果真 (当前图片 ＞ 1)
    当前图片 ＝ 当前图片 － 1
.如果真结束

.版本 2

.全局变量 使用端口, 整数型
.全局变量 内网IP, 文本型
.全局变量 外网IP, 文本型
.全局变量 当前运营商, 文本型
.全局变量 加密秘钥, 文本型
.全局变量 全客户, 文本型, , "0"
.全局变量 已收到过的数据, 文本型, , "0", 配合HASH与MD5防重放攻击
.全局变量 是否关闭服务器, 逻辑型
.全局变量 上次接收时间, 长整数型
.全局变量 服务器IP, 文本型
.全局变量 是否检测中, 逻辑型
.全局变量 当前版本, 整数型
.全局变量 网络详情, 网络信息, , "0"
.全局变量 上次干掉时间, 长整数型
.全局变量 心跳包周期, 整数型
.全局变量 是否断网, 逻辑型
.全局变量 全延迟, 整数型, , "5"
.全局变量 上次延迟, 整数型
.全局变量 上次延迟位置, 整数型
.全局变量 延迟发送时间, 长整数型
.版本 2

.数据类型 TOKEN_ELEVATION, , ,
    .成员 TokenIsElevated, 整数型

.数据类型 网络信息, 公开
    .成员 管理员状态, 文本型
    .成员 状态, 文本型
    .成员 类型, 文本型
    .成员 接口名称, 文本型
.版本 2

.DLL命令 GetTokenInformation, 整数型, , "GetTokenInformation", , ,
    .参数 TokenHandle, 整数型, , 0
    .参数 TokenInformationClass, 整数型, , 0
    .参数 TokenInformation, TOKEN_ELEVATION, , 0
    .参数 TokenInformationLength, 整数型, , 0
    .参数 ReturnLength, 整数型, 传址, 0
.版本 2

.常量 端口测试网站, "<文本长度: 921>", , 常量值可用易语言IDE打开.e格式源码后双击查看；<0>编码<1>提交方式<2>提交地址<3>提交信息<4>成功信息<5>失败信息<6>cookie验证地址<7>超时时间(秒)<8>输出信息<9>
.版本 2

.图片 加载中图片
